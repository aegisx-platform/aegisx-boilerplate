# Server Configuration
PORT=3000
HOST=0.0.0.0
NODE_ENV=development

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=1h

# Database Configuration (Docker Compose)
DB_CONNECTION_STRING=
DB_HOST=localhost
DB_PORT=5432
DB_NAME=aegisx_db
DB_USER=postgres
DB_PASSWORD=postgres123
DB_SSL=false
DB_POOL_MIN=2
DB_POOL_MAX=10

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=900

# Redis Audit Configuration (for audit adapter=redis)
AUDIT_REDIS_CHANNEL=audit_events

# Test Database (when using separate test instance)
# DB_HOST=localhost
# DB_PORT=5433
# DB_NAME=aegisx_db_test
# DB_USER=postgres
# DB_PASSWORD=postgres123

# CORS Configuration
CORS_ORIGIN=*

# API Configuration
API_VERSION=v1

# Logging Configuration
LOG_LEVEL=info

# Structured Logging Configuration
# Enable/disable structured logging with correlation IDs and APM integration
STRUCTURED_LOGGING_ENABLED=true
LOG_CONSOLE_ENABLED=true
LOG_FILE_ENABLED=false
LOG_CORRELATION_HEADER=x-correlation-id

# Service Information
SERVICE_NAME=aegisx-api
SERVICE_VERSION=1.0.0

# Log Monitoring Systems (Choose ONE)
# Seq Configuration (SQL-based log analysis)
SEQ_ENABLED=false
SEQ_URL=http://localhost:5341
SEQ_API_KEY=

# Grafana + Loki Stack (Cloud-native log monitoring)
# No additional configuration needed - uses docker-compose.loki.yml
# Access: Grafana http://localhost:3001 (admin/admin123)
# Access: Loki API http://localhost:3100

# Fluent Bit Configuration (Advanced log processing)
FLUENT_BIT_ENABLED=false
CLUSTER_NAME=local
ES_USER=
ES_PASSWORD=
SEQ_ADMIN_PASSWORD_HASH=

# Graylog Configuration (Centralized log management)
GRAYLOG_ENABLED=false
GRAYLOG_HOST=graylog
GRAYLOG_PORT=12201
GRAYLOG_PASSWORD_SECRET=somepasswordpepper
GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
GRAYLOG_TIMEZONE=Asia/Bangkok
MONGO_ROOT_USER=admin
MONGO_ROOT_PASSWORD=password

# HTTP Client Configuration (Enterprise-grade HTTP client for external APIs)
HTTP_CLIENT_TIMEOUT=30000
HTTP_CLIENT_RETRY_ATTEMPTS=3
HTTP_CLIENT_RETRY_DELAY=1000
HTTP_CLIENT_CIRCUIT_BREAKER_ENABLED=true
HTTP_CLIENT_CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
HTTP_CLIENT_CIRCUIT_BREAKER_SUCCESS_THRESHOLD=3
HTTP_CLIENT_CIRCUIT_BREAKER_TIMEOUT=60000
HTTP_CLIENT_CACHE_ENABLED=false
HTTP_CLIENT_CACHE_TTL=300000
HTTP_CLIENT_LOGGING_REQUESTS=false
HTTP_CLIENT_LOGGING_RESPONSES=false
HTTP_CLIENT_LOGGING_ERRORS=true

# Secrets Manager Configuration (Secure API keys and tokens handling)
SECRETS_ADAPTER=environment
SECRETS_ENCRYPTION_KEY=
SECRETS_ENV_PREFIX=SECRET_
SECRETS_CACHE_ENABLED=true
SECRETS_CACHE_TTL=300000
SECRETS_CACHE_MAX_SIZE=1000
SECRETS_AUDIT_ACCESS=false
SECRETS_REQUIRE_NAMESPACE=false
SECRETS_DB_TABLE=secrets

# APM (Application Performance Monitoring) Configuration
# Enable OpenTelemetry integration for production monitoring
APM_ENABLED=false
APM_SERVICE_NAME=aegisx-api
APM_SERVICE_VERSION=1.0.0
APM_METRICS_PORT=9090

# Rate Limiting Configuration
RATE_LIMIT_MAX=100
RATE_LIMIT_TIME_WINDOW=900000

# Audit Logging Configuration
AUDIT_ENABLED=true
AUDIT_LOG_BODY=false
AUDIT_SUCCESS_ONLY=false
AUDIT_MAX_BODY_SIZE=5120

# Audit Integrity System Configuration
AUDIT_INTEGRITY_ENABLED=true
AUDIT_HASH_ALGORITHM=sha256
AUDIT_SIGNATURE_ALGORITHM=RSA-SHA256

# Route and Method Filtering
AUDIT_EXCLUDE_ROUTES=/health,/ready,/docs,/docs/*
AUDIT_EXCLUDE_METHODS=GET,HEAD,OPTIONS

# Domain Filtering (optional)
# AUDIT_INCLUDE_DOMAINS=users,roles,reports  # Only audit these domains (empty = all)
# AUDIT_EXCLUDE_DOMAINS=logs,metrics         # Exclude these domains (empty = none)

# Audit Adapter Options:
# - direct: Write audit logs directly to database (immediate, simple)
# - redis: Use Redis Pub/Sub for real-time processing (async, scalable)
# - rabbitmq: Use RabbitMQ for enterprise message queuing (robust, distributed)
# - hybrid: Fallback mechanism (not implemented yet)
AUDIT_ADAPTER=direct

AUDIT_BATCH_SIZE=100
AUDIT_BATCH_TIMEOUT=5000
AUDIT_QUEUE_NAME=audit_logs_queue
AUDIT_EXCHANGE_NAME=audit_exchange
AUDIT_MAX_RETRIES=3
AUDIT_RETRY_DELAY=1000

# RabbitMQ Configuration (for audit adapter=rabbitmq)
RABBITMQ_URL=amqp://guest:guest@localhost:5672
AUDIT_RABBITMQ_EXCHANGE=audit.logs
AUDIT_RABBITMQ_QUEUE=audit.logs.queue
AUDIT_RABBITMQ_ROUTING_KEY=audit.log
AUDIT_RABBITMQ_PRIORITY=true
AUDIT_RABBITMQ_DURABLE=true
AUDIT_RABBITMQ_PERSISTENT=true
AUDIT_MESSAGE_TTL=86400000
AUDIT_WORKER_CONCURRENCY=3
AUDIT_WORKER_PREFETCH=10
AUDIT_ACK_TIMEOUT=30000

# Event Bus Configuration
# Enable/disable Event Bus functionality (true/false)
# When disabled, events are silently dropped using NoOp adapter
EVENT_BUS_ENABLED=true

# Event Bus Adapter Options:
# - memory: In-memory events (development/testing, no persistence)
# - redis: Redis Pub/Sub (distributed real-time events, fire-and-forget)  
# - rabbitmq: RabbitMQ queues (reliable message delivery with persistence)
EVENT_BUS_ADAPTER=memory

# Redis Event Bus Configuration (when EVENT_BUS_ADAPTER=redis)
EVENT_BUS_REDIS_URL=
EVENT_BUS_REDIS_HOST=localhost
EVENT_BUS_REDIS_PORT=6379
EVENT_BUS_REDIS_PASSWORD=
EVENT_BUS_REDIS_DB=1
EVENT_BUS_REDIS_KEY_PREFIX=events:
EVENT_BUS_REDIS_MAX_RETRIES=3

# RabbitMQ Event Bus Configuration (when EVENT_BUS_ADAPTER=rabbitmq)
EVENT_BUS_RABBITMQ_URL=amqp://guest:guest@localhost:5672
EVENT_BUS_RABBITMQ_HOST=localhost
EVENT_BUS_RABBITMQ_PORT=5672
EVENT_BUS_RABBITMQ_USERNAME=guest
EVENT_BUS_RABBITMQ_PASSWORD=guest
EVENT_BUS_RABBITMQ_VHOST=/
EVENT_BUS_RABBITMQ_EXCHANGE=events
EVENT_BUS_RABBITMQ_EXCHANGE_TYPE=topic
EVENT_BUS_RABBITMQ_DLX=events.dlx
EVENT_BUS_RABBITMQ_PREFETCH=10

# Background Jobs Configuration (Enterprise-grade async task processing)
# Job System Configuration
JOBS_ADAPTER_TYPE=memory          # memory | redis | rabbitmq | database
JOBS_WORKERS=2                    # Number of workers per queue
JOBS_CONCURRENCY=5                # Jobs processed simultaneously per worker
JOBS_MAX_CONCURRENCY=20           # Global max concurrent jobs
JOBS_DEFAULT_QUEUE=default        # Default queue name

# Job Execution Settings
JOBS_DEFAULT_TIMEOUT=300000       # 5 minutes - Default job timeout
JOBS_DEFAULT_TTL=86400000         # 24 hours - Job time to live
JOBS_DEFAULT_ATTEMPTS=3           # Default retry attempts
JOBS_CLEANUP_INTERVAL=3600000     # 1 hour - Cleanup interval
JOBS_STALLED_INTERVAL=30000       # 30 seconds - Stalled job check interval
JOBS_MAX_STALLED=1                # Max stalled count before failure

# Job Monitoring
JOBS_MONITORING_ENABLED=true      # Enable job monitoring
JOBS_METRICS_INTERVAL=60000       # 1 minute - Metrics collection interval
JOBS_HEALTH_INTERVAL=30000        # 30 seconds - Health check interval

# Healthcare/Compliance Features
JOBS_AUDIT_ENABLED=false          # Enable job auditing
JOBS_ENCRYPT_DATA=false           # Encrypt sensitive job data
JOBS_COMPLIANCE_MODE=false        # Enable HIPAA compliance mode
JOBS_RETENTION_PERIOD=2592000000  # 30 days - Data retention period

# Redis Adapter Configuration (when JOBS_ADAPTER_TYPE=redis)
REDIS_JOBS_DB=1                   # Redis database for jobs
JOBS_REDIS_PREFIX=jobs:           # Redis key prefix

# Database Adapter Configuration (when JOBS_ADAPTER_TYPE=database)
JOBS_DB_TABLE=background_jobs     # Database table name
JOBS_POLL_INTERVAL=5000           # 5 seconds - Database polling interval

# Memory Adapter Configuration (when JOBS_ADAPTER_TYPE=memory)
JOBS_MEMORY_MAX=10000             # Max jobs in memory
JOBS_MEMORY_PERSIST=false         # Persist jobs to disk
JOBS_MEMORY_FILE=                 # Storage file path (if persist enabled)

# Storage Service Configuration (Enterprise file storage with multi-provider support)
# Enable/disable storage service functionality
STORAGE_ENABLED=true

# Storage Provider Options:
# - local: Local file system storage (development/testing)
# - minio: MinIO S3-compatible object storage (recommended for production)
STORAGE_PROVIDER=local

# Local Storage Configuration (when STORAGE_PROVIDER=local)
STORAGE_LOCAL_BASE_PATH=./storage/local
STORAGE_LOCAL_MAX_FILE_SIZE=104857600   # 100MB in bytes
STORAGE_LOCAL_PERMISSIONS=0755

# MinIO Storage Configuration (when STORAGE_PROVIDER=minio)
MINIO_ENDPOINT=localhost
MINIO_PORT=9000
MINIO_ACCESS_KEY=aegisx
MINIO_SECRET_KEY=aegisx123
MINIO_BUCKET=aegisx-files
MINIO_USE_SSL=false
MINIO_REGION=us-east-1

# Storage Configuration
STORAGE_ENCRYPTION_ENABLED=false
STORAGE_ENCRYPTION_ALGORITHM=aes-256-cbc

# MinIO Root Credentials (for docker-compose setup)
MINIO_ROOT_USER=aegisx
MINIO_ROOT_PASSWORD=aegisx123

# Production Database Example (uncomment and modify for production)
# DB_CONNECTION_STRING=postgresql://user:password@host:5432/database?ssl=true
# DB_SSL=true
# JWT_SECRET=your-very-secure-production-secret-at-least-32-characters-long
